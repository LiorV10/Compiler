STRING_LITERAL "\"\001\005\002\"\002"
IDENTIFIER "_\003\010_\003\010\004\010\005\002"
MAIN "ma\002_\002i\002n\002"
VOID "vo\002i\002d\002"
INT "in\002t\002"
LONG "lo\002n\002g\002"
FLOAT "fl\002o\002a\002t\002"
DOUBLE "do\002u\002b\002l\002e\002"
SHORT "sh\002o\002r\002t\002"
CHAR "ch\002a\002r\002"
UNSIGNED "un\002s\002i\002g\002n\002e\002d\002"
STRUCT "st\002r\002u\002c\002t\002"
TYPEDEF "ty\002p\002e\002d\002e\002f\002"
FOR "fo\002r\002"
IF "if\002"
ELSE "el\002s\002e\002"
WHILE "wh\002i\002l\002e\002"
RETURN "re\002t\002u\002r\002n\002"
PLUS "+"
PLUS_PLUS "++\002"
MINUS "-"
MINUS_MINUS "--\002"
PLUS_EQ "+=\002"
MINUS_EQ "-=\002"
STAR_EQ "*=\002"
SLASH_EQ "/=\002"
MOD_EQ "%=\002"
LOG_NOT "!"
GT ">"
RSHIFT ">>\002"
LT "<"
LSHIFT "<<\002"
EQ "="
GE ">=\002"
LE "<=\002"
EEQ "==\002"
NEQ "!=\002"
STAR "*"
SLASH "/"
MOD "%"
DOT "."
ARROW "->\002"
COMMA ","
SEMI_COLON ";"
LEFT_BRACKET "["
RIGHT_BRACKET "]"
LEFT_CURLY "{"
RIGHT_CURLY "}"
LEFT_PAREN "("
RIGHT_PAREN ")"
AMPERSAND "&"
OR "|"
LOG_AND "&&\002"
LOG_OR "||\002"
FLOAT_LITERAL "\004\006.\002\004\006\002"
INTEGER_LITERAL "\004\006"
WHITESPACE " \n\r\t\010\010\010\006"
EOD

translation_unit
primary_expression
postfix_expression
argument_expression_list
unary_expression
unary_operator
cast_expression
multiplicative_expression
additive_expression
shift_expression
relational_expression
equality_expression
and_expression
exclusive_or_expression
inclusive_or_expression
logical_and_expression
logical_or_expression
conditional_expression
assignment_expression
assignment_operator
expression
constant_expression
declaration
declaration_specifiers
init_declarator_list
init_declarator
storage_class_specifier
type_specifier
struct_or_union_specifier
struct_or_union
struct_declaration_list
struct_declaration
specifier_qualifier_list
struct_declarator_list
struct_declarator
enum_specifier
enumerator_list
enumerator
type_qualifier
declarator
direct_declarator
pointer
type_qualifier_list
parameter_type_list
parameter_list
parameter_declaration
identifier_list
type_name
abstract_declarator
direct_abstract_declarator
initializer
initializer_list
statement
labeled_statement
compound_statement
declaration_list
statement_list
expression_statement
selection_statement
iteration_statement
jump_statement
external_declaration
function_definition
block_enter
start
